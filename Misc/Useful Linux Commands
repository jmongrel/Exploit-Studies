Create a file on Linux:
	• echo "hello" > /tmp/file.txt
	• echo "hello" | dd of=/tmp/test.txt
	• cp /dev/stdin /tmp/file.txt <<< "hello world"
	• printf "hello\n" >> /tmp/test.txt
	• sed -i '$ a\hello' /tmp/test.txt

Delete the contents of a file on Linux:
	• >/tmp/file.log
	• :>/tmp/file.log
	• cat /dev/null > /tmp/file.log
	• cp /dev/null > /tmp/file.log
	• cp /dev/null /tmp/file.log
	• dd if=/dev/null of=/tmp/file.log
	• echo -n > /tmp/file.log
	• truncate -s 0 /tmp/file.log
	• ex +%d -scwq /tmp/file.log
	• vi +%d -escwq /tmp/file.log
	• install -m600 /dev/null /tmp/file.log

Spawn an interactive PTY from a shell through python
	• python -c 'import pty; pty.spawn("/bin/bash");'

Base64-encode a string
	• echo "hello world" | base64 -

Base64-decode a string
	• echo "aGVsbG8gd29ybGQK" | base64 -d -

Find text in files recursively
	• find / -type f -exec grep -l "passw" {} + 2>/dev/null

Simple Bash loop example
	• for i in $(seq 1 5);do echo 10.10.10.$i;done

Search and replace text in file
	• sed -i 's/OLD/NEW/g' /tmp/test
	• sed -i 's#OLD#NEW#g' /tmp/test
	• ex -sc '%s/OLD/NEW/g|x' /tmp/test
	• perl -e 's/OLD/NEW/g' -pi /tmp/test
	• awk -i inplace '{gsub("OLD", "NEW")}1' /tmp/test
	
	Note: the 1 on the end of the awk statement enables printing by default - needed for replacing

To replace text only if text is found on the 4th line
	• sed -i '4s/OLD/NEW/g' /tmp/test
	• gawk -i inplace 'NR==4{gsub(/OLD/,"NEW")}1' /tmp/test
	• perl -i -pe 's/OLD/NEW/g if $.==4' /tmp/test

Compile (simple) Windows binaries on Linux
	• wine gcc -o revshell.exe revshell.c -lwsock32 -lws2_32

Upload to website via curl POST or PUT
	• curl -X POST -F "file=@/bin/nc" "http://10.10.10.10:9999/upload"
	• curl -X PUT -F "file=@/bin/nc" "http://10.10.10.10:9999/upload"
	• curl -T localfile http://10.10.10.10:9999/localfile --http1.0

Delete from a website via curl DELETE
	• curl -X DELETE http://10.10.10.10:9999/file --http1.0
	
Other curl commands
	• curl -X OPTIONS http://10.10.10.10:9999 --http1.0 #to list allowed HTTP operations
